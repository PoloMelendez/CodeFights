//Note: Write a solution that only iterates over the string once and uses O(1) additional memory, 
//since this is what you would be asked to do during a real interview.
//Given a string s, find and return the first instance of a non-repeating character in it. If there is no such character, return '_'.
---------------------------------------
//Only iterates over the STRING once, unlike the top answers
//Dictionary is still O(1), because it will never exceed a size of 26
char firstNotRepeatingCharacter(string s) {
    Dictionary<char, int> letters = new Dictionary<char, int>();
    foreach(char c in s) {
        if(letters.ContainsKey(c))
            letters[c]++;
        else
            letters.Add(c, 1);
    }
    foreach(KeyValuePair<char, int> pair in letters) {
        if(pair.Value == 1)
            return pair.Key;
    }
    return '_';
}
